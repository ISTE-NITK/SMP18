Ans-1:
import numpy as np
import pandas as pd

player_match=pd.read_csv("DIM_PLAYER_MATCH.csv",delimiter=',',encoding=":ISO-8859-1",skiprows=[1])

per={}

for i in range (2008,2018):
    young=player_match.loc[(player_match.Season_year ==i) & (player_match.Age_As_on_match <25)]['Player_Id'].unique()
    allp=player_match.loc[(player_match.Season_year == i)]['Player_Id'].unique()
    per[i]=len(young)/len(allp)*100
print(per)

teamn={}
for i in range (2008,2018):
    max=0
    teamname='NULL'
    for team in player_match.Player_team.unique():
        young=player_match.loc[(player_match.Player_team ==team) & (player_match.Age_As_on_match <25) & (player_match.Season_year==i)]['Player_Id'].unique()
        if(len(young)>max):
            max=len(young)
            teamname=team
    teamn[i]=teamname
print(teamn)

award=player_match.loc[(player_match.Age_As_on_match <25)&(player_match.is_manofThematch==1)]['Player_Id'].unique()
total=player_match.loc[(player_match.is_manofThematch==1)]['Player_Id'].unique()
print(len(award)/len(total)*100)

Ans-2:
player_match['Batting_hand'] = player_match['Batting_hand'].map({'Right-hand bat':'Right-handed',
                                                                 '\xa0Right-hand bat':'Right-handed',
                                                                'Left-hand bat' : 'Left-handed',
                                                               '\xa0Left-hand bat' : 'Left-handed'})
right=player_match.loc[(player_match.Batting_hand=='Right-handed')&(player_match.is_manofThematch==1)]
left=player_match.loc[(player_match.Batting_hand=='Left-handed')&(player_match.is_manofThematch==1)]
print("No. of times Right handed player won Man of the Match:",len(right))
print("No. of times Left handed player won Man of the Match:",len(left))
player_match['Bowling_skill']=player_match['Bowling_skill'].map({
      'Right-arm offbreak':'spin','Right-arm medium':'pace',
        'Right-arm fast-medium':'pace','Left-arm fast-medium':'pace','Legbreak googly':'spin',
        'Right-arm medium-fast':'pace',
        'Slow left-arm orthodox':'spin','Right-arm fast':'pace',
        'Slow left-arm chinaman':'spin','Left-arm medium-fast':'pace',
       'Legbreak':'Spin','Right-arm bowler':'pace','Left-arm medium':'pace',
        'Left-arm fast':'pace','\xa0Left-arm fast':'pace','\xa0Right-arm fast-medium':'pace',
        'Right-arm medium fast':'pace','\xa0Right-arm medium-fast':'pace',
        '\xa0Right-arm offbreak':'spin','\xa0Legbreak':'spin'})
Pace=player_match[(player_match.Bowling_skill=='pace')&(player_match.is_manofThematch==1)]
Spin=player_match[(player_match.Bowling_skill=='spin')&(player_match.is_manofThematch==1)]
print("Pace Bowling Man of the Match:",len(Pace))
print("Spin Bowling Man of the Match:",len(Spin))

Ans-3:
player_match['Batting_hand'] = player_match['Batting_hand'].map({'Right-hand bat':'Right-handed',
                                                                 '\xa0Right-hand bat':'Right-handed',
                                                                'Left-hand bat' : 'Left-handed',
                                                               '\xa0Left-hand bat' : 'Left-handed'})
right=player_match[(player_match.Batting_hand=='Right-handed')&(player_match.is_manofThematch==1)]['Player_Name'].value_counts()
left=player_match[(player_match.Batting_hand=='Left-handed')&(player_match.is_manofThematch==1)]['Player_Name'].value_counts()
player_match['Bowling_skill']=player_match['Bowling_skill'].map({
      'Right-arm offbreak':'spin','Right-arm medium':'pace',
        'Right-arm fast-medium':'pace','Left-arm fast-medium':'pace','Legbreak googly':'spin',
        'Right-arm medium-fast':'pace',
        'Slow left-arm orthodox':'spin','Right-arm fast':'pace',
        'Slow left-arm chinaman':'spin','Left-arm medium-fast':'pace',
       'Legbreak':'Spin','Right-arm bowler':'pace','Left-arm medium':'pace',
        'Left-arm fast':'pace','\xa0Left-arm fast':'pace','\xa0Right-arm fast-medium':'pace',
        'Right-arm medium fast':'pace','\xa0Right-arm medium-fast':'pace',
        '\xa0Right-arm offbreak':'spin','\xa0Legbreak':'spin'})
spin=player_match[(player_match.Bowling_skill=='spin')&(player_match.is_manofThematch==1)]['Player_Name'].value_counts()
pace=player_match[(player_match.Bowling_skill=='pace')&(player_match.is_manofThematch==1)]['Player_Name'].value_counts()
wktkeeper=player_match[((player_match.Role_Desc=='Keeper')|(player_match.Role_Desc=='CaptainKeeper'))&(player_match.is_manofThematch==1)]['Player_Name'].value_counts()
allr=player_match[(player_match.Bowling_skill!='N/A')&(player_match.is_manofThematch==1)]['Player_Name'].value_counts()
print("the team is")
print(right[:2])
print(left[:2])
print(wktkeeper[:1])
print(allr[:1])
print(pace[:3])
print(spin[:2])

Ans-4:
max=0
for team in player_match.Player_team.unique():
    for team1 in player_match.Player_team.unique():
        series=player_match[(player_match.Player_team==team)&(player_match.Opposit_Team==team1)&(player_match.IsPlayers_Team_won==1)]['Match_Id'].value_counts()
        if(max<len(series)):
            pteam=team
            oteam=team1
            max=len(series)
print("the team which won maximum no. of matches is",pteam,"against",oteam)

