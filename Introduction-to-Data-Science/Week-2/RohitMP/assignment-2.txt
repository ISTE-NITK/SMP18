1.  If a duplicate key is entered during the initialization of a dictionary, only the last value given to the key gets stored, i.e. the previous values get overwritten.

2.  The values in the list are also stored in the set but the print statement gives an error since sets do no support indexing.

3.  The code would give an error since pop tried to remove an element from a tuple which is an immutable datatype.

4.  The output would be {'c','o','h'} since a set eliminates duplicate entries.

5.  
a=0
b=1
n=input("Enter the value of 'n': ")
for i in range(0,int(n)):
    print(a)
    b=b+a
    a=b-a

6.
n=input("Enter a number: ")
n=int(n)
sqrt=lambda n:n**0.5;
print(sqrt(n))

7.
dict={1:3,7:1,2:4,5:2}
print(dict)
x={}
key=set()
key.update(dict)
list=list(key)
for i in range(0,len(list)):
    y=dict[list[i]]
    x[y]=list[i]
sort = sorted(x)
a={}
for i in range(0,len(sort)):
    a[x[sort[i]]]=sort[i]
print(a)
